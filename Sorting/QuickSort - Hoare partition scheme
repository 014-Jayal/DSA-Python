class Solution:
    def quickSort(self, arr, low, high):
        if low < high:
            p = self.partition(arr, low, high)
            self.quickSort(arr, low, p)       # recurse on left side
            self.quickSort(arr, p + 1, high)  # recurse on right side

    def partition(self, arr, low, high):
        pivot = arr[low]   # choose first element as pivot
        i = low - 1
        j = high + 1

        while True:
            # Move from left until finding element >= pivot
            i += 1
            while arr[i] < pivot:
                i += 1

            # Move from right until finding element <= pivot
            j -= 1
            while arr[j] > pivot:
                j -= 1

            # If two pointers cross, return partition index
            if i >= j:
                return j

            # Swap elements
            arr[i], arr[j] = arr[j], arr[i]
