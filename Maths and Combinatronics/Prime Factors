def primeFac(n):
    res = []

    # Check for factor 2
    if n % 2 == 0:
        res.append(2)
        while n % 2 == 0:
            n //= 2

    # Check for odd prime factors
    i = 3
    while i * i <= n:
        if n % i == 0:
            res.append(i)
            while n % i == 0:
                n //= i
        i += 2

    # If n is a prime > 2
    if n > 2:
        res.append(n)

    return res

-----------------------------------------

#Not Optimized

class Solution:
    
    def primeFac(self, n):
        
        spf = [0] * (n+1)
        for i in range(2, n+1):
            spf[i] = i
            
        
        for i in range(2, int(n ** 0.5) + 1):
            if spf[i] == i:
                for j in range(i*i, n+1, i):
                    if spf[j] == j:
                        spf[j] = i
        
        s = set()
        
        while n > 1 :
            s.add(spf[n])
            n = n//spf[n]
            
        return sorted(s)
