class Solution:
    def isPalindrome(self, s: str) -> bool:
        s = " ".join(c.lower() for c in s if c.isalnum())

        left = 0
        right = len(s) - 1

        while left<right:
            if s[left] != s[right]:
                return False
            left += 1
            right -= 1

        return True

---------------------------------------------------------------

#Using regular expression for interviews

class Solution:
    def isPalindrome(self, s: str) -> bool:
        s = re.sub('[^a-zA-Z0-9]', '', s).lower()
        return s == s[::-1]  

---------------------------------------------------------------

class Solution:
    def isPalindrome(self, s: str) -> bool:
        i, j = 0, len(s) - 1
        while i < j:
            while i < j and not s[i].isalnum(): i += 1
            while i < j and not s[j].isalnum(): j -= 1

            if s[i].lower() != s[j].lower(): return False
            i += 1
            j -= 1

        return True
